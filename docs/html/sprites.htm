<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title>DOSDoom Sprites-in-a-pwad Fix</title>
</head>

<body bgcolor="#000000" text="#FFFFFF" link="#FFFF00"
vlink="#FF0000" alink="#FF0000" topmargin="4" leftmargin="4">

<table border="0" cellpadding="0" cellspacing="6" width="100%">
    <tr>
        <td align="center" valign="top" width="18%"
        background="menu_back.gif" bgcolor="#CE1000"><p
        align="left"><br>
        <br>
        <br>
        <br>
        <a href="#WhatsNew"><font color="#FFFFFF" face="Verdana">Whats
        New</font></a><font color="#FFFFFF" face="Verdana"><br>
        </font><a href="#HowTo"><font color="#FFFFFF"
        face="Verdana">How To</font></a><font color="#FFFFFF"
        face="Verdana"><br>
        </font><a href="#SimpleWads"><font color="#FFFFFF"
        face="Verdana">Simple WADs</font></a><font
        color="#FFFFFF" face="Verdana"><br>
        </font><a href="#RotationWads"><font color="#FFFFFF"
        face="Verdana">Rotation WADs</font></a><font
        color="#FFFFFF" face="Verdana"><br>
        </font><a href="#BuggyWads"><font color="#FFFFFF"
        face="Verdana">Buggy WADs</font></a><font color="#FFFFFF"
        face="Verdana"><br>
        </font><a href="#FlatsAndPatches"><font color="#FFFFFF"
        face="Verdana">Flats &amp; Patches</font></a><font
        color="#FFFFFF" face="Verdana"><br>
        </font><a href="#TechnicalStuff"><font color="#FFFFFF"
        face="Verdana">Technical Stuff</font></a><font
        color="#FFFFFF" face="Verdana"><br>
        </font><a href="#CurrentStateOfPlay"><font
        color="#FFFFFF" face="Verdana">Current State</font></a><br>
        </p>
        </td>
        <td valign="top" width="82%"><p align="center"><font
        size="6">DOSDOOM SPRITES-IN-A-PWAD FIX<br>
        </font><font size="5">(For Version 0.64)</font></p>
        <p align="center"><font size="3">For the latest info,
        visit the DOSDoom Website at </font><a
        href="http://www.frag.com/dosdoom"><font size="3">http://www.frag.com/dosdoom</font></a></p>
        <table border="1" cellpadding="0" cellspacing="0"
        width="100%" bordercolor="#800000">
            <tr>
                <td align="right" bgcolor="#CE1000"><font
                color="#FFFFFF" size="2" face="Verdana"><b>Notes
                on the Sprites-in-a-PWAD Bugfix </b></font></td>
            </tr>
        </table>
        <p><a name="WhatsNew"><font size="2" face="Verdana"><strong></strong></font></a><font
        size="2" face="Verdana"><strong>Quick Summary of What's
        New</strong>:<br>
        Compatibility default - all support turned off by default<br>
        Enable sprites -gfixspr<br>
        Enable flats -gfixflt<br>
        Optimise patches -gfixpat<br>
        Enable all the above -gfixsfp<br>
        Enable some odd pwads -gignrot<br>
        Enable all the above -gfixall<br>
        <br>
        This file is divided into two sections; following this is
        a &quot;how to&quot; aimed at<br>
        a practical viewpoint and then follows the theoretical
        section for those of<br>
        you who are interested.<br>
        <br>
        <br>
        </font><a name="HowTo"><font size="2" face="Verdana"><strong></strong></font></a><font
        size="2" face="Verdana"><strong>How To</strong><br>
        It is not possible to use sprites in a PWAD directly at
        all, there are some<br>
        restrictions on using flats in a PWAD directly, and
        patches seem to work ok;<br>
        but the bottom line is that to put sprites in a PWAD you
        currently have to<br>
        use DeuSF to &quot;append sprites&quot; in order to make
        it work. It would be nice if,<br>
        given the release of the Doom source code, there was a
        &quot;magic&quot; way of making<br>
        all sprite-bearing PWADs work directly in Doom without
        DeuSF, but there are<br>
        many non-standard and some buggy sprite-bearing PWADs
        that DeuSF fixes up so<br>
        that you can use them, in addition to its normal job of
        appending sprites.<br>
        <br>
        In short, a lot of work will be required to support
        directly in Doom all the<br>
        possible ways in which sprites have been used in PWADs,
        so this software gives<br>
        you as much as is possible at the time; most
        sprite-bearing PWADs work with<br>
        it and is disabled by default so that it won't interfere
        with DeuSF's work<br>
        when you want to use a PWAD that it can't yet handle.<br>
        <br>
        </font><a name="SimpleWads"><font size="2" face="Verdana"><strong></strong></font></a><font
        size="2" face="Verdana"><strong>Simple Wads</strong><br>
        Most sprite PWADs simply define their own versions of
        sprites already in<br>
        the Doom or Doom 2 WAD, with the same name but with
        different artwork.<br>
        <br>
        To use these, specify the command line switch
        &quot;-gfixspr&quot; to tell Doom<br>
        to &quot;group&quot; sprites together - this does
        something similar to what DeuSF<br>
        does, but &quot;inside&quot; DOOM, not in your PWAD.<br>
        <br>
        <br>
        </font><a name="RotationWads"><font size="2"
        face="Verdana"><strong></strong></font></a><font size="2"
        face="Verdana"><strong>Rotation Wads<br>
        </strong>These are sprite PWADs that define view angles
        (rotations) of a sprite<br>
        that do not normally exist in Doom; for example the
        yellow key normally<br>
        has only two sprites but to turn it into, for example a
        cat (as in Michael<br>
        Gummelt's &quot;Aliens vs Predator&quot; WAD), you need
        the normal animal running<br>
        views that you get with monsters and players. Such WADs
        almost always come<br>
        with a DeHackEd patch to enable the new sprite views as
        most such views<br>
        cannot be detected by Doom.<br>
        <br>
        You can detect one these WADs because with normal sprite
        support turned on<br>
        as described above (&quot;-gfixspr&quot;) Doom will
        complain about a sprite having<br>
        &quot;more than one lump mapped to it&quot; or else it
        will complain about a sprite's<br>
        rotations; for example, &quot;TROO: A 3 has rotations and
        a rot=0 lump&quot;. <br>
        <br>
        I am not sure exactly what DeuSF does with these, but for
        the meantime<br>
        there is an **experimental** way of enabling these WADs;
        because it is<br>
        experimental, it has to be enabled in addition to
        &quot;-gfixspr&quot; - the command<br>
        is &quot;-gignrot&quot;. This is usually ok, but it
        theoretically might cause Doom<br>
        to crash out to DOS (or a DOS box) in some PWADs, which
        is why it is only<br>
        experimental for now; in fairness, I have only ever had
        it crash when<br>
        the PWAD being used had a serious design bug (see next
        section).<br>
        <br>
        <br>
        </font><a name="BuggyWads"><font size="2" face="Verdana"><strong></strong></font></a><font
        size="2" face="Verdana"><strong>Buggy Wads<br>
        </strong>These are PWADs that have design bugs in them,
        such as missing sprite list<br>
        markers, or where the designer has forgotten to remove
        blank sprites that<br>
        are sometimes used when putting graphics into a WAD with
        some tools. Most<br>
        such WADs will appear to work fine with DeuSF but not all
        will and some<br>
        may work only partially - this applies especially to
        &quot;rotation wads&quot;.<br>
        <br>
        There is currently NO support for such WADs in this
        software so you must<br>
        use DeuSF in the usual way to make the WAD work. When
        using DeuSf, do not<br>
        turn on the &quot;-gfixspr&quot; or &quot;-gignrot&quot;
        switches as they will undermine DeuSF.<br>
        <br>
        I am currently thinking about whether it is worth
        supporting such WADs; a<br>
        large amount of programming, and run-time in the game,
        would be needed to<br>
        do this and since such WADs ought to be fixed by the
        designer using, I feel<br>
        that it may be sort-of &quot;unethical&quot; to do this
        as it may encourage bad design.<br>
        <br>
        <br>
        </font><a name="FlatsAndPatches"><font size="2"
        face="Verdana"><strong></strong></font></a><font size="2"
        face="Verdana"><strong>Flats and Patches</strong><br>
        Although flats usually work OK in a PWAD provided the WAD
        is designed<br>
        correctly, and wall patches work anyway, flats and
        patches are handled inside<br>
        Doom in much the same way as sprites (except that they
        don't have rotations).<br>
        <br>
        There must be some reason why this is so and so this
        software also allows you<br>
        to treat flats and patches in the same way; in fact some
        older flat-bearing<br>
        WADs will require DeuSF unless you use this facility on
        them. The commands to<br>
        do this are &quot;-gfixflt&quot; (flats) and
        &quot;-gfixpat&quot; (patches).<br>
        <br>
        There are two additional switches that you can use if you
        want: &quot;-gfixsfp&quot;<br>
        turns on sprites, flats and patches together as if you
        had said all three of<br>
        the above (&quot;-gfixspr -gfixflt -gfixpat&quot;) on the
        same command line; &quot;-gfixall&quot;<br>
        does the same and also turns on &quot;-gignrot&quot;.<br>
        <br>
        <br>
        </font><a name="TechnicalStuff"><font size="2"
        face="Verdana"><strong></strong></font></a><font size="2"
        face="Verdana"><strong>Technical Stuff</strong><br>
        With the release of the Doom source code comes the
        possibility<br>
        to make all kinds of interesting changes to the game; one
        of the<br>
        most sought-after is the ability to use sprites (and
        flats) in a<br>
        PWAD without having to use DeuSF to append all sprites
        and/or<br>
        flats to the PWAD first. Although later versions of Doom
        can use<br>
        flats in a PWAD, sprites are still a problem.<br>
        <br>
        The problem exists because, in a nutshell, Doom builds an
        internal<br>
        list of lumps (sprites, flats, level entries, and so on)
        that is a<br>
        copy of each WAD directory, but also includes a handle
        for the WAD<br>
        that the lump came from; a &quot;master directory&quot;,
        if you like. The code<br>
        in Doom for sprites assumes that there is only one<br>
        S_START...S_END list in the master directory and that all
        sprites<br>
        are located in it within this list; it doesn't seem to
        care if<br>
        the sprites in the list are not in one file, provided
        they are<br>
        all together in one list; this is why DeuSF works and all
        sprites<br>
        for the release Dooms have to be in one WAD - there's no
        way to<br>
        consolidate the multiple sprite lists together into one
        without<br>
        access to the source code.<br>
        <br>
        I don't know if that is the full story, and more
        investigation<br>
        is needed, but my experiments seem to bear this out so
        far. In<br>
        fact, the same limitation ought to apply to flats and
        patches as<br>
        well; but Doom appears to have no trouble with patches in
        a PWAD<br>
        and flats are ok if used with caution.<br>
        <br>
        </font><a name="CurrentStateOfPlay"><font size="2"
        face="Verdana"><strong></strong></font></a><font size="2"
        face="Verdana"><strong>The Current State of Play</strong><br>
        It handles most sprite PWADs, including those that use<br>
        SS_START and SS_END (although these keywords are not
        proper Doom WAD<br>
        syntax, many editors and WAD utilities use them). Because
        flats and<br>
        patches are also treated in much the same way, as
        mentioned above,<br>
        it also performs the same functions for those.<br>
        <br>
        There are also a few PWADs that do peculiar things with
        sprites,<br>
        like redefining the names with different rotations; for
        example,<br>
        SPOSC2C8 in the PWAD where the IWAD calls it SPOSC8C2, or
        where a<br>
        sprite that normally has no rotations is given two (or
        four, or <br>
        eight) views; such WADs are usually encountered
        accompanied by<br>
        DeHackEd patches - Aliens vs Predator and the StarWars
        Beta are<br>
        two examples of this.<br>
        <br>
        There is now an __experimental__ hack that will allow you<br>
        use such PWADs; because it is experimental, and because
        DeHackEd<br>
        support will vary according to which Doom variation you
        are using,<br>
        this feature is disabled by default; the command-line
        switch to<br>
        enable it is &quot;-gignrot&quot;.<br>
        <br>
        This works by suppressing the normal checks that Doom
        makes for <br>
        sprites that have more than one lump mapped to them, or
        invalid<br>
        combinations of rotations (ie., some in the PWAD and some
        in the <br>
        IWAD); since Doom appears to use only the ones it wants
        and then<br>
        the last-one found of conflicting entries, it seems to
        work.<br>
        <br>
        These checks appear to have been in Doom originally to
        notify the<br>
        user of buggy PWADs or a corrupted IWAD; certainly there
        doesn't seem<br>
        to be any functional reason for them other than the minor
        performance<br>
        improvements that would have resulted from enforcing such
        checks.<br>
        <br>
        I have never had it crash Doom by itself (although
        DeHackEd patches<br>
        made for such PWADs sometimes do); and I normally have it
        enabled by<br>
        default on the Doom command line. I have tested the
        StarWars beta OK<br>
        with it; with Aliens vs Predator, the sprites __seem__
        ok.<br>
        <br>
        BTW, the SS_START and so on syntax isn't strictly proper
        Doom WAD <br>
        syntax, so there is also a switch &quot;-gstrict&quot;
        that forces Doom<br>
        to quit if any of these &quot;nonstandard&quot; list
        flags is encountered.</font></p>
        </td>
    </tr>
</table>

<p align="center">&nbsp;</p>
</body>
</html>
