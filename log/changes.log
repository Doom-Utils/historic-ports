-----------------------------------------------------------------------------
Date: 31 May 1998 - John Cole

DOOMSTAT.H      /
V_VIDEO*.C      /
DJGPP/I_VIDEO.C - Fixed the problem with the global variables by removing
                  SCREENWMULTIPLIER, SCREENHMULTIPLIER etc. (Sorry Andy)
                  It display's properly again in higher resolutions.

                  Now uses vars : int DX,DXI,DY,DYI,DY2,DYI2;


                  Also in v_video1.c for some reason it was using Y Co-ords
                  for both x & y in the follwing :

                         V_DrawPatchInDirect8
                         V_DrawPatchInDirectFlipped8
                         V_DrawPatchShrink8
                         V_DrawPatchInDirectTrans8    (Why didn't I see it?)
                         V_DrawPatchInDirect8

                  Funnily enough they were correct in all the 16-bit
                  functions (v_video2.c).

DJGPP/I_ALLEGV.C /
M_MISC.C         /
M_OPTION.C     -  Added "No Vert" to the main option menu, "Vertical Retrace"
                  to the Video Menu. VRetrace stops the screen shearing.
                  (Both options are now saved into the DEFAULT.CFG file)

                  No Vert is only useful if you are like me and don't believe
                  in using MLOOK with Doom :)

                  Vertical Retrace will be overridden if the "-dblbuffer"
                  parameter is specified at the command line.

-----------------------------------------------------------------------------
Date: 30 May 1998 - Andy Baker

DOOMSTAT.H - Added lostsoulability & spectreability as extern ints.

D_MAIN.C   - Added lostsoulability & Spectreability as ints.

P_ENEMY.C  - (A_Look, A_StandardRefire, A_FaceTarget)
                added invisibility decrease check (if thing stealth)

             (A_Chase)
                added invisibility increase check (if thing stealth)

             (A_Fall)
                set invisibility = 0 (visible).

P_INTER.C  - (P_DamageMobj),
                added invisibility decrease check (if thing stealth).

P_MOBJ.H   - Removed MF_TRANSLUC25 / 50 / 75 flags in the flags enum.
             Added   MF_STEALTH flag to the flags enum.
             Added invisibility setting to mobj_t
                (0=Visible >> stages of translucency >> 4=invisible)

R_THINGS   - (R_ProjectSprite)
               setup that if thing is invisible ignore (return).

             (R_DrawVisSprite)
               if transluc then use transluc 50% draw.
               check vis->invisibility to set transluc draw.

P_MOBJ.C   - (P_MobjThinker) Add sections of code to change lost souls and
             spectre flags for their visibility/ability.

M_OPTION.C - Two New Procedures:
               (M_ChangeLostAbility & M_ChangeSpectreAbility), alters the
               info->flags of lost souls/spectres respectively. If also sets
               the update flag so that P_MobjThinker will update all the
               relevant things when they "think".

               Added the options to the options menu. Re-ordered the
               look-up table colours. Doom-Red is now default.

               Translucency is now only on and off.

               Spectres and Lost souls can be:
                Visible/part-invis/translucent/stealth.

             Renamed all local procedures M_* to be consistent.

G_GAME.C   - Unremarked translucent settings and picked out things that were
             requested to be translucent. Added code to change the flags of
             lost souls and spectres according to lostsoulability &
             spectreability respectively. 

-----------------------------------------------------------------------------
Date: 28 May 1998 - John Cole

RAD_TRIG.C - (DoRadiTrigger)Fixed a bug which cause SpawnThing to crash. 
             Caused by items respawning without any thing info in mapthing_t.
R_MAIN.C   - (R_ExecuteViewSize) Now displays the status bar properly at
             any resolution (Looks good at 400x300 now).

-----------------------------------------------------------------------------
Date: 26 May 1998 - Andy Baker
*** When compiling use RHIDE ***

Notes:
   Temporary fixes for all DDF altered stuff (i.e. correct damage done).

   Added Global Video Variables:
       SCREENWMULTIPLIER, SCREENHMULTIPLIER,
       SCREENWDIVISIER, SCREENHDIVISIER for deltax? and deltay? in the
       V_Video?.? so that program does not calculate these each time -
       InDirectPatch procedures.

   Added:
      V_DrawPatchTrans8() + V_DrawPatchInDirectTrans8() in V_Video1.C
      V_DrawPatchTrans16() + V_DrawPatchInDirectTrans16() in V_Video2.C
      V_Trans.H added (colour translation)
      M_WriteTextTrans() in M_Menu.C
      Menu Colour Configuration in Menu
      (All above code from John Cole - cheers).

      Options, Video, Control and Gameplay have new graphical title
                                                        (in dosdoom.wad)
      Options, Video and Gameplay menu centered.

      Options Menu has new functions:
        Zombie Targeting (uses lessaccuratezom which is default....
                ...be a psycho, put zombie targeting on perfect!)
                (Uses code for DDF STUFF)

        Monster Respawn (None/Teleport/Resurrect Style)

      ST_STUFF.C:
        Added the new cheat codes (see dosdoom.his)

      A LOT OF CODE CLEANUP!

-----------------------------------------------------------------------------
Date: 21 May 1998 - John Cole
Removed lastepisode var from game.c (not used anymore)
Finalised rad_trig.c

-----------------------------------------------------------------------------
Date: 17 May 1998 - Kester Maddock
** All changes have been made to the RHIDE project file **

Cleanup of functions + names.  NORMALUNIX removed.  Dehacked removed.
 strings.* tables.* sounds.* info.* => lu_str.* lu_math.* lu_sound.* lu_info.*
 allegvid.* multires.* optmenu.* mus.* mp3.* midi.*
   => i_allegv.* v_res.* m_option.* mus_mus.* mus_mp3.* mus_midi.*

Support for a dosdoom.wad: if you merge a doom 2 wad and an ultimate doom wad
 (mixing the texture resources of course) you get a dosdoom.wad.  This means
 misc changes throughout the source, ie gamemode == commercial to gamemission
 == doom.

To print stuff use I_Printf instead of printf or fprintf(stderr, )  The format
 is the same as printf, and it will also print to the debug file.  Also, in
 graphics modes, will print to the message line instead of 40x25 text (yuk!)

Use Debug_Printf to print to the debug file.  This only works with DEVELOPERS
 #defined,  if it is undefined Debug_Printf optimises to nothing.  It will print
 a report of the form FUNCTION: string to the debug file, automatically putting
 the function name in :-)
Doom's red status line at the top of startup has been implemented.  Shows
 DOSDoom version and DOOM compatibility version.
Linux version is totally fucked.
Skytexture on Floor and Ceiling in large sectors bug fixed.
Cleaned up some stuff in the sound code.
Number of Demos limit removed.
Changed mallocs to Z_Mallocs
-----------------------------------------------------------------------------
Date: 11 May 1998 - John Cole
+ Added Radius_Trigger(TM) :) Scripting Language, with TIP handling functions.
  Files Added    : djgpp/rad_trig.c - Parser / Scripting Language / Trigger
                                      handler / Tip Processor
                   djgpp/rad_trig.h - Function Prototypes

  Files Modified : djgpp/d_main.c   (D_DoomMain)   -Script Loader/Parser
                   djgpp/p_user.c   (P_PlayerThink)-Trigger Event Handler Call
                   djgpp/hu_stuff.c (HU_Drawer)    -Tip Event Handler Call
                   djgpp/g_game.c   
                       + Added lastmap var(global) to accomodate the script
                         function GOTO_MAP <mapno>, ensures map names are
                         displayed correctly. (Used in function G_DoLoadLevel)
                       (G_DoReborn)
                       (G_Ticker) - No also resets/restarts radius triggers
                                    depending on whether the player has died,
                                    gone to a new level or is playing a
                                    netgame.

+ Some code cleanup.
                   djgpp/r_things.c (R_DrawVisSprite)
                                    - Commented out a block of code which is
                                      now irrelevant. To render a translated
                                      player the engine relies on the playxtra
                                      var to contain the palette translation
                                      offset multiplier.
                   djgpp/p_mobj.c   (P_SpawnPlayer)
                                    - Reworked most of the code. It should
                                      be easier to understand and now just
                                      sets playxtra to define the players
                                      translation colours.
                   djgpp/g_game.c   (G_CheckDemoStatus)
                                    - Rolled up code which set playersingame
                                      1..MAXPLAYERS to 0;
                                    (G_DoNewGame)
                                    - Same as previous entry.
                   djgpp/d_net.c    (D_TryRunTics)
                                    - I misunderstood the original code
                                      thinking it did something else (when
                                      I was figuring out the 8 player stuff
                                      back in the CTFDoom days :) ).
                                      So the old code has been put back in.
                   djgpp/hu_stuff.c (HU_Drawer)
                                    - Show info cheat shows the x & y co-ords
                                      normally rather than a fixed point
                                      number. Will make it easier when using
                                      the Radius Triggers when finding
                                      coordinates.
-----------------------------------------------------------------------------
Date: 4 May 1998 - Kester Maddock
Nearptr removed from djgpp/allegvid.c djgpp/i_main.c djgpp/i_net.c (correction
  of idea sent to Andy in d_net.c)  There was no good reason why DOSDoom runs
  with Nearptrs enabled, as it relies on __djgpp_conventional_base etc being
  constant
djgpp/i_system.c djgpp/i_video.c
  Clean up.  System functions put in i_system.c from i_video.c.  Timer changed
  from 200Hz to 35Hz. I_GetMilliTime removed (and it's use in hu_stuff.c changed
  to use I_GetTime)
  I_Quit uses puttext instead of nearptr
  I_GetEvent moved to i_system.c from i_video.c
  Fixed devparm problem in I_FinishUpdate
  Allegro startup code is now in I_Init
st_stuff.c
  Uses CD_Next and CD_Prev and CD_Play instead of accessing CD direct.
optmenu.c
  Added a slider for CD music volume.
s_sound.?
djgpp/i_sound.?
djgpp/mus.?           Handles Standard Music
djgpp/mus_mod.c       Handles MOD music
djgpp/mod.h
djgpp/mp3.?           Handles MP3 music
djgpp/libjgmod/*.*    Library of MOD functions
djgpp/libamp/*.*      Library of MP3 functions
linux/i_sound.c
  All new sound code :-)  Volume sent to low level routines now ranges from 1-255.
  I put a >> in linux/i_sound.c to combat this, don't know if it works ;-)
d_net.c
  Calls to music code in loops while waiting for a tick, to keep MP3 music fed.
z_zone.?
  Wrote a Z_ReMalloc routine.  Currently, there are a few optimisations to be made.
  (If the old size is larger that the new size - if MINFRAGMENT was reached or the
  block is to be reduced in size.)  Start removing all those limits!
-----------------------------------------------------------------------------
Date: 26th April 1998 - Andy Baker
   Notes:
        Human Madness REMOVED
        Human Explosions REMOVED
        New AI Temporarily Removed
        mobjinfo_t in INFO.H has new items - (Definable things) continuning

   * P_ENEMY.C & INFO.C (new procedures):-
        A_ChaseNoMissile       - program re-structuring
        A_ZombiePistolAttack   - replaces A_POSATTACK (Definable things)
        A_ZombieShotgunAttack  - replaces A_SPOSATTACK (Definable things)
        A_ZombieChaingunAttack - replaces A_CPOSATTACK (Definable things)
        A_DeadlyPistolAttack   - new accurate enemy pistol attack
        A_DeadlyShotgunAttack  - new accurate enemy shotgun attack
        A_DeadlyChaingunAttack - new accurate enemy chaingun attack
        A_StandardAttack       - replaces normal enemy attack (not complete)
        A_StandardRefire       - replaces refire for CPOS, BSPI & SPID 

   Overview of changes:
        Human Madness & explosions removed (crap I did earlier).

        New AI was temp. removed - to be added to the definable thing.

        The new procedures are added and existing ones are replaced to make
        the doom engine more dynamic. The aim is to have all the thing info
        loaded at runtime from a ASCII file - this will make dehacked obsolete
        as you can directly tell the engine all the info for a thing and
        modify it accordingly. This is the earliest very stable version I have
        and the definable thing is well on its way to completion. Hopefully
        doom with a -game parameter is possible. INFO.H is also the focus for
        change. NB: Until I complete the standard attack procedure, all close
        combat damage will be that of a Baron of Hell! A standard attack is
        the normal attack used by imps, cacodemons, barons, hellknights,
        cyberdemons and arachnotrons, it takes the missile type from the
        actor->info, I have to work on a closecombat attacks - where
        applicable.

        A_ChaseNoMissile replaced a goto statement - I may try to get
        a C++ compile out of this.
 -----------------------------------------------------------------------------
