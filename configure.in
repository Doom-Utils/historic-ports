dnl Process this file with autoconf to produce a configure script.
dnl $Id: configure.in,v 1.12 2000/02/19 23:49:09 cphipps Exp $
AC_INIT(src/d_main.c)

dnl --- Check for system type
AC_CANONICAL_SYSTEM

case "$target" in
i?86-*) AC_DEFINE(I386) is_i386=yes ;;
esac

AM_CONDITIONAL(I386_ASM, test "$is_i386" = yes)

case "$target" in
*-linux) AC_DEFINE(LINUX) AC_DEFINE(SECURE_UID) ;;
*-linux-*) AC_DEFINE(LINUX) AC_DEFINE(SECURE_UID) ;;
*-freebsd) AC_DEFINE(FREEBSD) ;;
esac

dnl --- some defaults for CFLAGS : josh
if test -z "$CFLAGS" ; then 
	case "$target" in
	# marginal gains from aligning code
	i386-*) SYS_CFLAGS="-fomit-frame-pointer -m386" ;;
	i486-*) SYS_CFLAGS="-fomit-frame-pointer -m486" ;;
	# nothing special for pentium
	i586-*) SYS_CFLAGS="-fomit-frame-pointer" ;;
	# CMOV op on ppro/II/686 can help us
	i686-*) SYS_CFLAGS="-fomit-frame-pointer -mcpu=i686 -march=i686" ;;
	esac
	export CFLAGS
	CFLAGS="-O2 -Wall -Winline -Wcast-align -Wwrite-strings -ffast-math $SYS_CFLAGS"
fi

dnl --- Fire up automake
AM_INIT_AUTOMAKE(lxdoom, 1.4.2)
AM_CONFIG_HEADER(config.h)

dnl --- Checks for programs.
AC_PROG_CC

dnl --- Checks for typedefs
AC_TYPE_SIZE_T

AC_DECL_SYS_SIGLIST

dnl --- Compiler characteristics
AC_C_CONST
AC_C_INLINE
AC_C_BIGENDIAN

if test "$ac_cv_c_bigendian" != no
then AC_DEFINE(__BIG_ENDIAN__)
fi

dnl --- Libraries
AC_PATH_X
AC_PATH_XTRA
if test "x$x_includes" != x; then
  CFLAGS="$CFLAGS -I$x_includes"
else
  CFLAGS="$CFLAGS"
fi
LIBS="$LIBS $X_LIBS $X_EXTRA_LIBS"
dnl --- cphipps - no longer need sqrt(3) AC_CHECK_LIB(m,sqrt)
AC_CHECK_LIB(Xext,XShmCreateImage,AC_DEFINE(HAVE_LIBXEXT) LIB_XEXT=-lXext,LIB_XEXT=,-lXext -lX11)
dnl --- CPhipps - disable XFree86 DGA support for release
dnl AC_CHECK_LIB(Xxf86dga,XF86DGADirectVideo,AC_DEFINE(HAVE_LIBXXF86DGA) LIB_XDGA=-lXxf86dga,LIB_XDGA=,-lXxf86dga -lXext -lX11)
AC_CHECK_LIB(vga,vga_setpalvec,BUILD_LSDOOM=lsdoom,BUILD_LSDOOM=)

dnl --- Library functions
AC_CHECK_FUNC(stricmp,,AC_DEFINE(stricmp,strcasecmp)) 
AC_CHECK_FUNC(strnicmp,,AC_DEFINE(strnicmp,strncasecmp)) 
AC_CHECK_FUNCS(inet_aton)

dnl --- Check for joystick header
AC_CHECK_HEADERS(linux/joystick.h)
dnl --- Seek headers for non-blocking IO ioctl
AC_CHECK_HEADERS(sys/ioctl.h)
AC_CHECK_HEADERS(sys/filio.h)

dnl --- Check for soundcard.h
BUILD_SNDSERV=
AC_CHECK_HEADERS(sys/soundcard.h,BUILD_SNDSERV=sndserv)
AC_CHECK_HEADERS(machine/soundcard.h,BUILD_SNDSERV=sndserv)
AC_CHECK_HEADERS(linux/soundcard.h,BUILD_SNDSERV=sndserv)

dnl --- Always use highres mode, unless explicitely --disabled
AC_ARG_ENABLE(highres,[  --disable-highres	  disables support for resulutions greater than 320x200],,AC_DEFINE(HIGHRES))
dnl --- By default, simple checks with little overhead are done to catch memory corruption, or
dnl --- problems with new code
AC_ARG_ENABLE(checks,[  --disable-checks	  disables some basic internal sanity checks],,
AC_DEFINE(SIMPLECHECKS)
AC_DEFINE(ZONEIDCHECK))
dnl --- Option to enable debugging
AC_ARG_ENABLE(debug,[  --enable-debug	  turns on various debugging features, like range checking and internal heap diagnostics],
AC_DEFINE(RANGECHECK)
AC_DEFINE(INSTRUMENTED)
AC_DEFINE(TIMEDIAG))
AC_ARG_ENABLE(heapcheck,[  --enable-heapcheck	  turns on continuous heap checking (very slow)],AC_DEFINE(CHECKHEAP))


dnl --- Decide what programs to build
if test "$no_x" != yes
then BUILD_LXDOOM=lxdoom
else
BUILD_LXDOOM=
fi

AC_SUBST(BUILD_SNDSERV)
AC_SUBST(BUILD_LXDOOM)
AC_SUBST(BUILD_LSDOOM)
AC_SUBST(LIB_XEXT)
AC_SUBST(LIB_XDGA)

dnl --- Pass install dirs to C pre-processor
dnl --- YUCK! but I can't see a better way to do this
if test "$prefix" = "NONE"
then prefix="/usr/local"
fi
if test "$exec_prefix" = "NONE"
then exec_prefix=$prefix
fi

dnl --- decide directories
gamesdir=$prefix/games
exp_gamesdir=`eval "echo $gamesdir"`
exp_datadir=`eval "echo $datadir"`
waddir=$exp_datadir/games/doom
dnl --- now finally spit them out
AC_DEFINE_UNQUOTED(SNDSERV_PATH,"$exp_gamesdir/sndserv")
AC_DEFINE_UNQUOTED(MUSSERV_PATH,"$exp_gamesdir/musserv")
AC_DEFINE_UNQUOTED(DOOMWADDIR,"$waddir")

dnl --- output
AC_OUTPUT(Makefile src/Makefile doc/Makefile data/Makefile)

dnl
dnl $Log: configure.in,v $
dnl Revision 1.12  2000/02/19 23:49:09  cphipps
dnl Fix build problems on systems with X headers in include path by default
dnl
dnl Revision 1.11  2000/01/26 08:44:24  cphipps
dnl Support filio.h so Solaris can get the non-blocking socket ioctl
dnl
dnl Revision 1.10  2000/01/25 21:33:22  cphipps
dnl Fix security in case of being setuid
dnl
dnl Revision 1.9  1999/12/18 22:25:10  cphipps
dnl Remove -pipe from the CFLAGS, as this is only guaranteed to work with GNU as(1)
dnl
dnl Revision 1.8  1999/12/18 15:48:06  cphipps
dnl Use autoconf script to detect inet_aton
dnl
dnl Revision 1.7  1999/11/04 13:02:20  cphipps
dnl Remove check/use of libm
dnl
dnl Revision 1.6  1999/11/01 00:16:09  cphipps
dnl Added checks for inline and sys_siglist
dnl Update version number to 1.4.2
dnl
dnl Revision 1.5  1999/10/27 07:43:58  cphipps
dnl Added stuff to set up CFLAGS right for different architectures,
dnl thanks to patch from Josh Parsons.
dnl
dnl Revision 1.4  1999/10/18 19:16:42  cphipps
dnl Version 1.4.1
dnl
dnl Revision 1.3  1999/10/12 15:42:50  cphipps
dnl Changed version to 1.4.0
dnl
dnl Revision 1.2  1999/10/02 11:43:37  cphipps
dnl Added autoconf options to control diagnostics
dnl
dnl Revision 1.1  1999/09/10 19:52:44  cphipps
dnl Initial revision
dnl
dnl
