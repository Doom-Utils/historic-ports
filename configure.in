dnl Process this file with autoconf to produce a configure script.
dnl $Id: configure.in,v 1.16 2000/03/27 10:33:22 cph Exp $
AC_INIT(src/d_main.c)

dnl --- some defaults for CFLAGS : josh
if test -z "$CFLAGS" ; then
        CFLAGS="-O2"
fi
dnl -fno-strict-aliasing needed to fix nasty pointers in l_video_trans.c (lines 339 and 363)
CFLAGS="$CFLAGS -fno-strict-aliasing -ffast-math"
export CFLAGS

dnl --- Check for system type
AC_CANONICAL_SYSTEM

case "$target" in
i?86-*) AC_DEFINE(I386) use_i386_asm=yes ;;
esac

AM_PROG_AS
AC_ARG_ENABLE(i386-asm,[  --disable-i386-asm      Do not use i386 assembly], use_i386_asm=no)
AM_CONDITIONAL(I386_ASM, test "$use_i386_asm" = yes)

if test "$use_i386_asm" = yes; then
        CFLAGS="$CFLAGS -DI386_ASM"
	export CFLAGS
fi

case "$target" in
*-linux) AC_DEFINE(LINUX) AC_DEFINE(SECURE_UID) ;;
*-linux-*) AC_DEFINE(LINUX) AC_DEFINE(SECURE_UID) ;;
*-freebsd) AC_DEFINE(FREEBSD) ;;
esac

dnl --- Fire up automake
AM_INIT_AUTOMAKE(lsdldoom, 1.5)
AM_CONFIG_HEADER(config.h)

dnl --- Checks for programs.
AC_PROG_CC

dnl --- Try for processor optimisations
AC_ARG_ENABLE(cpu-opt,[  --disable-cpu-opt        turns off cpu specific opti
misations],,[

SYS_CFLAGS="-march=native"

echo -n "checking whether $CC supports CPU optimisations $SYS_CFLAGS..."
echo 'void f(){}' > conftest.c
if test -z "`${CC-cc} $SYS_CFLAGS -c conftest.c 2>&1`"; then
	CFLAGS="$CFLAGS $SYS_CFLAGS"
	echo "yes"
else
	echo "no"
fi
])

dnl --- Checks for typedefs
AC_TYPE_SIZE_T
AC_TYPE_PID_T
AC_TYPE_UID_T

AC_DECL_SYS_SIGLIST

dnl --- Compiler characteristics
AC_C_CONST
AC_C_INLINE

dnl --- Libraries

AM_PATH_SDL(1.0.1, BUILD_SDLDOOM=lsdldoom, BUILD_SDLDOOM=)

AC_CHECK_LIB(SDL_mixer,Mix_LoadMUS,[
    MIXER_CFLAGS=-DHAVE_MIXER
    MIXER_LIBS=-lSDL_mixer
],,$SDL_LIBS)

AC_CHECK_LIB(SDL_net, SDLNet_UDP_Open,[
    has_net=yes
    NET_CFLAGS="-DHAVE_SDL_NET"
    NET_LIBS=-lSDL_net
    BUILD_SERVER=
],[
    BUILD_SERVER=
],,$SDL_LIBS)

AC_CHECK_FUNC(socket,[
     has_net=yes
     NET_CFLAGS="-DHAVE_NET -DHAVE_BSD_NET"
     NET_LIBS=
     BUILD_SERVER=lsdldoom-game-server
],)
AC_ARG_ENABLE(net-game,[  --disable-net-game      turns off network game
support],[
     has_net=no
     NET_CFLAGS=
     NET_LIBS=
     BUILD_SERVER=
],) 
AM_CONDITIONAL(HAVE_NET, test "$has_net" = yes)

dnl --- Library functions
AC_CHECK_FUNC(stricmp,,AC_DEFINE(stricmp,strcasecmp)) 
AC_CHECK_FUNC(strnicmp,,AC_DEFINE(strnicmp,strncasecmp)) 
AC_CHECK_FUNCS(inet_aton)
AC_CHECK_FUNCS(vsnprintf snprintf)

dnl --- Check for joystick header
AC_CHECK_HEADERS(linux/joystick.h)
dnl --- Seek headers for non-blocking IO ioctl
AC_CHECK_HEADERS(sys/ioctl.h)
AC_CHECK_HEADERS(sys/filio.h)

dnl --- Always use highres mode, unless explicitely --disabled
AC_ARG_ENABLE(highres,[  --disable-highres	  disables support for resulutions greater than 320x200],,AC_DEFINE(HIGHRES))
dnl --- By default, simple checks with little overhead are done to catch memory corruption, or
dnl --- problems with new code
AC_ARG_ENABLE(checks,[  --disable-checks	  disables some basic internal sanity checks],,
AC_DEFINE(SIMPLECHECKS)
AC_DEFINE(ZONEIDCHECK))
dnl --- Option to enable debugging
AC_ARG_ENABLE(debug,[  --enable-debug	  turns on various debugging features, like range checking and internal heap diagnostics],
AC_DEFINE(RANGECHECK)
AC_DEFINE(INSTRUMENTED)
AC_DEFINE(TIMEDIAG))
AC_ARG_ENABLE(heapcheck,[  --enable-heapcheck	  turns on continuous heap checking (very slow)],AC_DEFINE(CHECKHEAP))


dnl --- Decide what programs to build

AC_SUBST(BUILD_SDLDOOM)
AC_SUBST(BUILD_SERVER)
AC_SUBST(SDL_CFLAGS)
AC_SUBST(MIXER_CFLAGS)
AC_SUBST(MIXER_LIBS)
AC_SUBST(NET_CFLAGS)
AC_SUBST(NET_LIBS)

dnl --- Pass install dirs to C pre-processor
dnl --- YUCK! but I can't see a better way to do this
if test "$prefix" = "NONE"
then prefix="/usr/local"
fi
if test "$exec_prefix" = "NONE"
then exec_prefix=$prefix
fi

dnl --- decide directories
gamesdir=$prefix/games
exp_gamesdir=`eval "echo $gamesdir"`
exp_datadir=`eval "echo $datadir"`
waddir=$exp_datadir/games/doom
dnl --- now finally spit them out
AC_DEFINE_UNQUOTED(DOOMWADDIR,"$waddir")

dnl --- output
AC_OUTPUT(Makefile src/Makefile doc/Makefile data/Makefile lsdldoom.spec)

dnl
dnl $Log: configure.in,v $
dnl Revision 1.16  2000/03/27 10:33:22  cph
dnl Bump version number
dnl
dnl Revision 1.15  2000/03/17 00:12:02  cph
dnl Bump version number
dnl Move SYS_CFLAGS stuff after compiler detection
dnl Add option to not set CPU optimisation flags (for RPMs)
dnl Test CPU optimisation flags (so gcc 2.7.2 works)
dnl
dnl Revision 1.14  2000/03/16 20:14:08  cph
dnl Add docs to make install, add RPM building
dnl
dnl Revision 1.13  2000/02/26 19:22:53  cph
dnl Add pid_t test for src/d_client.c, uid_t for l_video_svgalib.c, and sys/wait.h for src/d_client.c
dnl
dnl Revision 1.12  2000/02/19 23:49:09  cphipps
dnl Fix build problems on systems with X headers in include path by default
dnl
dnl Revision 1.11  2000/01/26 08:44:24  cphipps
dnl Support filio.h so Solaris can get the non-blocking socket ioctl
dnl
dnl Revision 1.10  2000/01/25 21:33:22  cphipps
dnl Fix security in case of being setuid
dnl
dnl Revision 1.9  1999/12/18 22:25:10  cphipps
dnl Remove -pipe from the CFLAGS, as this is only guaranteed to work with GNU as(1)
dnl
dnl Revision 1.8  1999/12/18 15:48:06  cphipps
dnl Use autoconf script to detect inet_aton
dnl
dnl Revision 1.7  1999/11/04 13:02:20  cphipps
dnl Remove check/use of libm
dnl
dnl Revision 1.6  1999/11/01 00:16:09  cphipps
dnl Added checks for inline and sys_siglist
dnl Update version number to 1.4.2
dnl
dnl Revision 1.5  1999/10/27 07:43:58  cphipps
dnl Added stuff to set up CFLAGS right for different architectures,
dnl thanks to patch from Josh Parsons.
dnl
dnl Revision 1.4  1999/10/18 19:16:42  cphipps
dnl Version 1.4.1
dnl
dnl Revision 1.3  1999/10/12 15:42:50  cphipps
dnl Changed version to 1.4.0
dnl
dnl Revision 1.2  1999/10/02 11:43:37  cphipps
dnl Added autoconf options to control diagnostics
dnl
dnl Revision 1.1  1999/09/10 19:52:44  cphipps
dnl Initial revision
dnl
dnl
